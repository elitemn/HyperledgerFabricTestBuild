{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[parameters('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-07-01",
      "name": "[concat(parameters('vmName'), '/installHyperledger')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/elitemn/HyperledgerFabricTestBuild/refs/heads/main/installFabric.sh"
          ],
	  "commandToExecute": "[concat('bash installFabric.sh ', parameters('scriptUsername'))]"
        }
      }
    }
  ],
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "hyperledgerVM",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the virtual machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Admin password for the virtual machine."
      }
    },
    "scriptUsername": {
      "type": "string",
      "metadata": {
        "description": "Username to be used in the script."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "hyperledgerVNet",
      "metadata": {
        "description": "Name of the virtual network."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "hyperledgerSubnet",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "hyperledgerPublicIP",
      "metadata": {
        "description": "Name of the public IP address."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "hyperledgerdns",
      "metadata": {
        "description": "DNS label prefix."
      }
    },
    "nicName": {
      "type": "string",
      "defaultValue": "hyperledgerNIC",
      "metadata": {
        "description": "Name of the network interface."
      }
    },
    "autoShutdownStatus": {
      "type": "string",
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Status of the auto shutdown."
      }
    },
    "autoShutdownTime": {
      "type": "string",
      "defaultValue": "1900",
      "metadata": {
        "description": "Time for auto shutdown in HHMM format."
      }
    },
    "autoShutdownTimeZone": {
      "type": "string",
      "defaultValue": "Central Standard Time",
      "metadata": {
        "description": "Time zone for auto shutdown."
      }
    }

  }
}
